#############################################################################
# Makefile for building: pacman
# Generated by qmake (2.01a) (Qt 4.8.1) on: Tue Jul 10 11:07:06 2012
# Project:  pacman.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile pacman.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O2 -Wall -W -fPIC -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -fPIC -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -Iactor -Ibonus -Iobject -Iview -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lpthread -lGLU -lGL	-lglut `Magick++-config --cppflags --cxxflags --ldflags --libs`
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = EventObserver.cpp \
		EventSystem.cpp \
		Game.cpp \
		Maze.cpp \
		Pacman.cpp \
		Tile.cpp \
		actor/Actor.cpp \
		actor/Blinky.cpp \
		actor/Brain.cpp \
		actor/Clyde.cpp \
		actor/Enemy.cpp \
		actor/Inky.cpp \
		actor/Pinky.cpp \
		actor/Player.cpp \
		actor/ScatterBrain.cpp \
		bonus/Bonus.cpp \
		bonus/Cherry.cpp \
		object/PacmanExplosion.cpp \
		object/ScoreBoard.cpp \
		view/PlayerView.cpp 
OBJECTS       = EventObserver.o \
		EventSystem.o \
		Game.o \
		Maze.o \
		Pacman.o \
		Tile.o \
		Actor.o \
		Blinky.o \
		Brain.o \
		Clyde.o \
		Enemy.o \
		Inky.o \
		Pinky.o \
		Player.o \
		ScatterBrain.o \
		Bonus.o \
		Cherry.o \
		PacmanExplosion.o \
		ScoreBoard.o \
		PlayerView.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		pacman.pro
QMAKE_TARGET  = pacman
DESTDIR       = 
TARGET        = pacman

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pacman.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile pacman.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile pacman.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/pacman1.0.0 || $(MKDIR) .tmp/pacman1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/pacman1.0.0/ && $(COPY_FILE) --parents Direction.h EventObserver.h EventSystem.h Game.h Maze.h Renderer.h Tile.h Timer.h actor/Actor.h actor/Blinky.h actor/Brain.h actor/Clyde.h actor/Enemy.h actor/Inky.h actor/Pinky.h actor/Player.h actor/ScatterBrain.h bonus/Bonus.h bonus/Cherry.h object/BloodParticle.h object/PacmanExplosion.h object/Particle.h object/ScoreBoard.h object/Vector.h view/PlayerView.h Renderer.cpp Timer.cpp object/Particle.cpp object/BloodParticle.cpp .tmp/pacman1.0.0/ && $(COPY_FILE) --parents EventObserver.cpp EventSystem.cpp Game.cpp Maze.cpp Pacman.cpp Tile.cpp actor/Actor.cpp actor/Blinky.cpp actor/Brain.cpp actor/Clyde.cpp actor/Enemy.cpp actor/Inky.cpp actor/Pinky.cpp actor/Player.cpp actor/ScatterBrain.cpp bonus/Bonus.cpp bonus/Cherry.cpp object/PacmanExplosion.cpp object/ScoreBoard.cpp view/PlayerView.cpp .tmp/pacman1.0.0/ && (cd `dirname .tmp/pacman1.0.0` && $(TAR) pacman1.0.0.tar pacman1.0.0 && $(COMPRESS) pacman1.0.0.tar) && $(MOVE) `dirname .tmp/pacman1.0.0`/pacman1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/pacman1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

EventObserver.o: EventObserver.cpp EventObserver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EventObserver.o EventObserver.cpp

EventSystem.o: EventSystem.cpp EventSystem.h \
		EventObserver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EventSystem.o EventSystem.cpp

Game.o: Game.cpp Game.h \
		actor/Player.h \
		EventSystem.h \
		EventObserver.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Actor.h \
		actor/Enemy.h \
		actor/Blinky.h \
		actor/Pinky.h \
		actor/Inky.h \
		actor/Clyde.h \
		object/ScoreBoard.h \
		Maze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Game.o Game.cpp

Maze.o: Maze.cpp Maze.h \
		actor/Player.h \
		EventSystem.h \
		EventObserver.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Actor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Maze.o Maze.cpp

Pacman.o: Pacman.cpp Renderer.cpp \
		Renderer.h \
		Direction.h \
		Timer.cpp \
		Timer.h \
		Game.h \
		actor/Player.h \
		EventSystem.h \
		EventObserver.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Actor.h \
		actor/Enemy.h \
		actor/Blinky.h \
		actor/Pinky.h \
		actor/Inky.h \
		actor/Clyde.h \
		object/ScoreBoard.h \
		Maze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Pacman.o Pacman.cpp

Tile.o: Tile.cpp Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		Direction.h \
		EventObserver.h \
		EventSystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Tile.o Tile.cpp

Actor.o: actor/Actor.cpp actor/Actor.h \
		Direction.h \
		EventObserver.h \
		Game.h \
		actor/Player.h \
		EventSystem.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Enemy.h \
		actor/Blinky.h \
		actor/Pinky.h \
		actor/Inky.h \
		actor/Clyde.h \
		object/ScoreBoard.h \
		Maze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Actor.o actor/Actor.cpp

Blinky.o: actor/Blinky.cpp actor/Blinky.h \
		actor/Enemy.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		EventObserver.h \
		EventSystem.h \
		actor/Actor.h \
		actor/Player.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Blinky.o actor/Blinky.cpp

Brain.o: actor/Brain.cpp actor/Brain.h \
		Direction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Brain.o actor/Brain.cpp

Clyde.o: actor/Clyde.cpp actor/Clyde.h \
		actor/Enemy.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		EventObserver.h \
		EventSystem.h \
		actor/Actor.h \
		actor/Player.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Clyde.o actor/Clyde.cpp

Enemy.o: actor/Enemy.cpp actor/Enemy.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		EventObserver.h \
		EventSystem.h \
		actor/Actor.h \
		actor/Player.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		Game.h \
		actor/Blinky.h \
		actor/Pinky.h \
		actor/Inky.h \
		actor/Clyde.h \
		object/ScoreBoard.h \
		Maze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Enemy.o actor/Enemy.cpp

Inky.o: actor/Inky.cpp actor/Inky.h \
		actor/Enemy.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		EventObserver.h \
		EventSystem.h \
		actor/Actor.h \
		actor/Player.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Blinky.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Inky.o actor/Inky.cpp

Pinky.o: actor/Pinky.cpp actor/Pinky.h \
		actor/Enemy.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		EventObserver.h \
		EventSystem.h \
		actor/Actor.h \
		actor/Player.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Pinky.o actor/Pinky.cpp

Player.o: actor/Player.cpp actor/Player.h \
		EventSystem.h \
		EventObserver.h \
		Direction.h \
		Tile.h \
		bonus/Cherry.h \
		bonus/Bonus.h \
		object/PacmanExplosion.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		view/PlayerView.h \
		actor/Actor.h \
		Game.h \
		actor/Enemy.h \
		actor/Blinky.h \
		actor/Pinky.h \
		actor/Inky.h \
		actor/Clyde.h \
		object/ScoreBoard.h \
		Maze.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Player.o actor/Player.cpp

ScatterBrain.o: actor/ScatterBrain.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ScatterBrain.o actor/ScatterBrain.cpp

Bonus.o: bonus/Bonus.cpp bonus/Bonus.h \
		Direction.h \
		EventObserver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Bonus.o bonus/Bonus.cpp

Cherry.o: bonus/Cherry.cpp bonus/Cherry.h \
		bonus/Bonus.h \
		Direction.h \
		EventObserver.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Cherry.o bonus/Cherry.cpp

PacmanExplosion.o: object/PacmanExplosion.cpp object/PacmanExplosion.h \
		Direction.h \
		object/Vector.h \
		object/Particle.h \
		object/BloodParticle.h \
		object/Particle.cpp \
		object/BloodParticle.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PacmanExplosion.o object/PacmanExplosion.cpp

ScoreBoard.o: object/ScoreBoard.cpp object/ScoreBoard.h \
		EventObserver.h \
		EventSystem.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ScoreBoard.o object/ScoreBoard.cpp

PlayerView.o: view/PlayerView.cpp view/PlayerView.h \
		Direction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PlayerView.o view/PlayerView.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

